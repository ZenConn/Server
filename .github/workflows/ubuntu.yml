name: Ubuntu

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - id: mysql
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: "8.0"
          my-cnf: |
            default-authentication-plugin=mysql_native_password
            sync_binlog=0
            innodb_doublewrite=OFF
            innodb-flush-log-at-trx-commit=0
            innodb-flush-method=nosync
          user: "app"
          password: "secret_password"

      - name: connect via unix domain socket
        run: mysql -uroot -S ${{ steps.mysql.outputs.base-dir }}/tmp/mysql.sock -e 'SELECT version();'

      - run: sed -i "s|SOCK_PATH|$MYSQL_SOCK_PATH|g" configs/config.json
        env:
          MYSQL_SOCK_PATH: ${{ steps.setup-mysql.outputs.base-dir }}

      - run: mysql -uroot < db.sql

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.5
        id: install-boost
        with:
          boost_version: 1.84.0

      - uses: actions/cache@v3
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: configure
        run: cmake -Stest -Bbuild -DENABLE_TEST_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - name: build
        run: cmake --build build -j4

      - name: test
        run: |
          cp configs/config.json build/config.json
          cd build
          ctest --build-config Debug

      - name: collect code coverage
        run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
